# start nginx in no daemon mode so the init process can handle it
pid                          /run/nginx/nginx.pid;
#user                         www-data;
worker_processes             1;
# num of opened files per worker
worker_rlimit_nofile         2000;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

error_log                /var/lib/nginx/logs/error.log    warn;

###################################################
# Activated Dynamic Modules
###################################################

load_module "/usr/lib/nginx/modules/ndk_http_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_lua_module.so";



###################################################
# Events Block
###################################################

events {
    worker_connections       512;
    multi_accept             off;
}


###################################################
# HTTP Block
###################################################

http {

    ###############################################
    # Basic Settings
    ###############################################

    charset                  utf-8;
    # hide information about nginx
    server_tokens            off;

    include                  /etc/nginx/mime.types;
    default_type             application/octet-stream;

    # maximal allowed size of the client request body
    client_max_body_size     1024M;

    ignore_invalid_headers   on;
    types_hash_max_size      2048;
    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;


    ###############################################
    # Performance Tweaks
    ###############################################

    # a comprehensive list of all parameters can be found at:
    # http://nginx.org/en/docs/http/ngx_http_core_module.html

    # sendfile copies data between one FD and other from within the kernel
    sendfile                 on;
    # send headers in one peace
    tcp_nopush               on;
    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay              on;
    # timeout for keep-alive connections. Server will close connections after this time
    keepalive_timeout        30;
    # maximum number of requests that can be served through one keep-alive connection
    keepalive_requests       2000;
    # allow the server to close the connection after a client stops responding
    reset_timedout_connection on;
    # how long to wait for the client to send a request header
    client_header_timeout    15;
    # read timeout for the request body from client
    client_body_timeout      15;
    # timeout for transmitting a response to the client
    send_timeout             10;

    # buffer for reading a client request header
    client_header_buffer_size 1k;

    large_client_header_buffers  4 4k;
    # when a request body is larger than the buffer size, it is written to a temporary file
    client_body_buffer_size  128k;
    client_body_temp_path    /var/lib/nginx/client_body_temp;
    # buffers used for reading a response from a disk.
    output_buffers           4 4k;
    # transmission of client data will be postponed until nginx has at least size bytes of data to send
    postpone_output          1460;

    # cache files for a short period of time
    # 'max' maximal number of cached filds
    # 'inactive' exclude files that are not accessed within this period of time
    open_file_cache          max=1000 inactive=20;
    # invalidate cached file after this time
    open_file_cache_valid    30;
    # cache only if the file has been accessed a couple of times
    open_file_cache_min_uses 5;
    open_file_cache_errors   off;


    ###############################################
    # Logging Settings
    ###############################################

    # http://nginx.org/en/docs/http/ngx_http_log_module.html

    # logging format for logstash
    log_format               logstash '$http_host $remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time $upstream_response_time';

    # the logfiles are (linked) forwarded to stdout resp. stderr so they will be
    # collected by supervisor
    access_log               /var/lib/nginx/logs/access.log   logstash;


    ###############################################
    # Gzip Settings
    ###############################################

    # http://nginx.org/en/docs/http/ngx_http_gzip_module.html

    gzip                     on;
    gzip_disable             "msie6";
    # minimum length of a response that will be gzipped
    gzip_min_length          1000;
    gzip_vary                on;
    gzip_proxied             expired no-cache no-store private auth;
    gzip_comp_level          5;
    gzip_buffers             16 8k;
    gzip_http_version        1.1;
    gzip_types               text/css text/plain text/xml text/x-component application/atom+xml application/javascript application/x-javascript application/json application/xml+rss application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon;


    ###############################################
    # TLS
    ###############################################

    ssl_protocols            TLSv1.2;

    # enable ciphers
    ssl_prefer_server_ciphers on;
    # preferred ciphers, EECDH+AESGCM, EDH+AESGCM, EECDH and EDH are dynamic
    # cipher lists. Use `openssl ciphers '...'` to check the actual tls ciphers
    ssl_ciphers              'EECDH+AESGCM:EDH+AESGCM:EECDH:EDH:!MD5:!RC4:!PSK:!LOW:!MEDIUM:!CAMELLIA:!ECDSA:!DES:!DSS:!3DES:!EXPORT:!SEED:!aNULL:!eNULL:!NULL';

    # elliptic curve type
    ssl_ecdh_curve           secp384r1;

    # boost performance
    ssl_session_cache        shared:SSL:20m;
    ssl_session_timeout      10m;

    # TLS key and certificate
    ssl_certificate          ;
    ssl_certificate_key      ;

    # Diffie-Hellman parameter
    ssl_dhparam              /etc/ssl/private/dhparam.pem;
    # HSTS: enforce the use of HTTPS
    add_header               Strict-Transport-Security "max-age=31536000; includeSubDomains";


    ###############################################
    # Optintional rules for virtual hosts
    ###############################################

    # Lock out bots; use if ($limit_bots = 1) { return 403;    }
    map $http_user_agent $limit_bots {
        default 0;
        ~*(google|bing|yandex|msnbot) 1;
        ~*(AltaVista|Googlebot|Slurp|BlackWidow|Bot|ChinaClaw|Custo|DISCo|Download|Demon|eCatch|EirGrabber|EmailSiphon|EmailWolf|SuperHTTP|Surfbot|WebWhacker) 1;
        ~*(Express|WebPictures|ExtractorPro|EyeNetIE|FlashGet|GetRight|GetWeb!|Go!Zilla|Go-Ahead-Got-It|GrabNet|Grafula|HMView|Go!Zilla|Go-Ahead-Got-It) 1;
        ~*(rafula|HMView|HTTrack|Stripper|Sucker|Indy|InterGET|Ninja|JetCar|Spider|larbin|LeechFTP|Downloader|tool|Navroad|NearSite|NetAnts|tAkeOut|WWWOFFLE) 1;
        ~*(GrabNet|NetSpider|Vampire|NetZIP|Octopus|Offline|PageGrabber|Foto|pavuk|pcBrowser|RealDownload|ReGet|SiteSnagger|SmartDownload|SuperBot|WebSpider) 1;
        ~*(Teleport|VoidEYE|Collector|WebAuto|WebCopier|WebFetch|WebGo|WebLeacher|WebReaper|WebSauger|eXtractor|Quester|WebStripper|WebZIP|Widow|Zeus) 1;
        ~*(Twengabot|htmlparser|libwww|Python|perl|urllib|scan|email|Pyth|PyQ|WebCollector|WebCopy|webcraw) 1;
    }


    ###############################################
    # Basic DoS prevention
    ###############################################

    geo $limited {
        # all ips shall be limeted in requests
        default              1;
        # exclude limits for search bots
        include              whitelist.lst;
    }

    map $limited $limit {
        1 $binary_remote_addr;
        0 "";
    }
    limit_conn_status        429;
    limit_req_status         429;

    ###############################################
    # Other
    ###############################################

    # add nosniff header (https://www.owasp.org/index.php/List_of_useful_HTTP_headers)
    add_header               X-Content-Type-Options nosniff;

    
    # Define variable 'real_scheme' and assign the value of 'scheme'
    map $scheme $real_scheme {
        default $scheme;
    }

    map $real_scheme $real_https {
        default 0;
        'https' 1;
    }


    ###############################################
    # Virtual hosts
    ###############################################

    include                  /etc/nginx/conf.d/*.conf;
    include                  /etc/nginx/conf.d/*/*.conf;
}

include /etc/nginx/non-http/*.conf;
